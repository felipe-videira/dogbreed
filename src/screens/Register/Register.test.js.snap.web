// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegisterForm /> should match the snapshot 1`] = `
<WithFormik(RegisterForm)>
  <Formik
    handleSubmit={[Function]}
    onSubmit={[Function]}
    validationSchema={[Function]}
  >
    <RegisterForm
      dirty={false}
      errors={Object {}}
      getFieldHelpers={[Function]}
      getFieldMeta={[Function]}
      getFieldProps={[Function]}
      handleBlur={[Function]}
      handleChange={[Function]}
      handleReset={[Function]}
      handleSubmit={[Function]}
      initialErrors={Object {}}
      initialTouched={Object {}}
      isSubmitting={false}
      isValid={true}
      isValidating={false}
      registerField={[Function]}
      resetForm={[Function]}
      setErrors={[Function]}
      setFieldError={[Function]}
      setFieldTouched={[Function]}
      setFieldValue={[Function]}
      setFormikState={[Function]}
      setStatus={[Function]}
      setSubmitting={[Function]}
      setTouched={[Function]}
      setValues={[Function]}
      submitCount={0}
      submitForm={[Function]}
      touched={Object {}}
      unregisterField={[Function]}
      validateField={[Function]}
      validateForm={[Function]}
      validateOnBlur={true}
      validateOnChange={true}
      validateOnMount={false}
      values={
        Object {
          "email": "",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "flex": 1,
            "justifyContent": "space-around",
          }
        }
      >
        <div
          className="css-view-1dbjc4n"
          style={
            Object {
              "WebkitAlignItems": "center",
              "WebkitBoxAlign": "center",
              "WebkitBoxFlex": 1,
              "WebkitBoxPack": "justify",
              "WebkitFlexBasis": "0%",
              "WebkitFlexGrow": 1,
              "WebkitFlexShrink": 1,
              "WebkitJustifyContent": "space-around",
              "alignItems": "center",
              "backgroundColor": "rgba(0,0,0,0.00)",
              "flexBasis": "0%",
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-around",
              "msFlexAlign": "center",
              "msFlexNegative": 1,
              "msFlexPack": "distribute",
              "msFlexPositive": 1,
              "msFlexPreferredSize": "0%",
            }
          }
        >
          <ForwardRef(Themed.Input)
            autoCapitalize="none"
            disabled={false}
            enablesReturnKeyAutomatically={true}
            keyboardType="email-address"
            onChangeText={[Function]}
            onEndEditing={[Function]}
            returnKeyType="next"
            value=""
          >
            <ThemedComponent
              autoCapitalize="none"
              disabled={false}
              enablesReturnKeyAutomatically={true}
              forwardedRef={null}
              keyboardType="email-address"
              onChangeText={[Function]}
              onEndEditing={[Function]}
              returnKeyType="next"
              value=""
            >
              <Input
                autoCapitalize="none"
                disabled={false}
                enablesReturnKeyAutomatically={true}
                keyboardType="email-address"
                onChangeText={[Function]}
                onEndEditing={[Function]}
                returnKeyType="next"
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
                value=""
              >
                <View
                  style={
                    Object {
                      "paddingHorizontal": 10,
                      "width": "100%",
                    }
                  }
                >
                  <div
                    className="css-view-1dbjc4n"
                    style={
                      Object {
                        "paddingLeft": "10px",
                        "paddingRight": "10px",
                        "width": "100%",
                      }
                    }
                  >
                    <AnimatedComponent
                      style={
                        Object {
                          "alignItems": "center",
                          "borderBottomWidth": 1,
                          "borderColor": "#86939e",
                          "flexDirection": "row",
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "borderBottomWidth": 1,
                            "borderColor": "#86939e",
                            "flexDirection": "row",
                            "transform": Array [
                              Object {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <div
                          className="css-view-1dbjc4n"
                          style={
                            Object {
                              "WebkitAlignItems": "center",
                              "WebkitBoxAlign": "center",
                              "WebkitBoxDirection": "normal",
                              "WebkitBoxOrient": "horizontal",
                              "WebkitFlexDirection": "row",
                              "WebkitTransform": "translateX(0px)",
                              "alignItems": "center",
                              "borderBottomColor": "rgba(134,147,158,1.00)",
                              "borderBottomWidth": "1px",
                              "borderLeftColor": "rgba(134,147,158,1.00)",
                              "borderRightColor": "rgba(134,147,158,1.00)",
                              "borderTopColor": "rgba(134,147,158,1.00)",
                              "flexDirection": "row",
                              "msFlexAlign": "center",
                              "msFlexDirection": "row",
                              "transform": "translateX(0px)",
                            }
                          }
                        >
                          <TextInput
                            autoCapitalize="none"
                            autoComplete="on"
                            autoCorrect={true}
                            editable={true}
                            enablesReturnKeyAutomatically={true}
                            keyboardType="email-address"
                            multiline={false}
                            numberOfLines={1}
                            onChangeText={[Function]}
                            onEndEditing={[Function]}
                            returnKeyType="next"
                            secureTextEntry={false}
                            style={
                              Object {
                                "alignSelf": "center",
                                "color": "black",
                                "flex": 1,
                                "fontSize": 18,
                                "minHeight": 40,
                              }
                            }
                            testID="RNE__Input__text-input"
                            underlineColorAndroid="transparent"
                            value=""
                          >
                            <input
                              autoCapitalize="none"
                              autoComplete="on"
                              autoCorrect="on"
                              className="css-textinput-1cwyjr8"
                              data-focusable={true}
                              data-testid="RNE__Input__text-input"
                              dir="auto"
                              enterkeyhint="next"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyPress={[Function]}
                              onSelect={[Function]}
                              readOnly={false}
                              spellCheck={true}
                              style={
                                Object {
                                  "WebkitAlignSelf": "center",
                                  "WebkitBoxFlex": 1,
                                  "WebkitFlexBasis": "0%",
                                  "WebkitFlexGrow": 1,
                                  "WebkitFlexShrink": 1,
                                  "alignSelf": "center",
                                  "color": "rgba(0,0,0,1.00)",
                                  "flexBasis": "0%",
                                  "flexGrow": 1,
                                  "flexShrink": 1,
                                  "fontSize": "18px",
                                  "minHeight": "40px",
                                  "msFlexItemAlign": "center",
                                  "msFlexNegative": 1,
                                  "msFlexPositive": 1,
                                  "msFlexPreferredSize": "0%",
                                }
                              }
                              type="email"
                              value=""
                            />
                          </TextInput>
                        </div>
                      </View>
                    </AnimatedComponent>
                  </div>
                </View>
              </Input>
            </ThemedComponent>
          </ForwardRef(Themed.Input)>
          <ForwardRef(Themed.Button)
            disabled={true}
            icon={
              <Icon
                allowFontScaling={false}
                color="hsl(208, 8%, 90%)"
                name="long-arrow-right"
                size={12}
                style={
                  Object {
                    "fontSize": 20,
                    "marginHorizontal": 10,
                  }
                }
              />
            }
            iconRight={true}
            loading={false}
            onPress={[Function]}
            titleStyle={
              Object {
                "fontSize": 24,
                "fontWeight": "bold",
              }
            }
            type="clear"
          >
            <ThemedComponent
              disabled={true}
              forwardedRef={null}
              icon={
                <Icon
                  allowFontScaling={false}
                  color="hsl(208, 8%, 90%)"
                  name="long-arrow-right"
                  size={12}
                  style={
                    Object {
                      "fontSize": 20,
                      "marginHorizontal": 10,
                    }
                  }
                />
              }
              iconRight={true}
              loading={false}
              onPress={[Function]}
              titleStyle={
                Object {
                  "fontSize": 24,
                  "fontWeight": "bold",
                }
              }
              type="clear"
            >
              <Button
                TouchableComponent={[Function]}
                buttonStyle={
                  Object {
                    "borderRadius": 3,
                  }
                }
                disabled={true}
                icon={
                  <Icon
                    allowFontScaling={false}
                    color="hsl(208, 8%, 90%)"
                    name="long-arrow-right"
                    size={12}
                    style={
                      Object {
                        "fontSize": 20,
                        "marginHorizontal": 10,
                      }
                    }
                  />
                }
                iconRight={true}
                loading={false}
                onPress={[Function]}
                raised={false}
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "rgba(0, 0, 0, 0.12)",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
                title=""
                titleStyle={
                  Object {
                    "fontSize": 24,
                    "fontWeight": "bold",
                  }
                }
                type="clear"
              >
                <View
                  style={
                    Object {
                      "borderRadius": 3,
                    }
                  }
                >
                  <div
                    className="css-view-1dbjc4n"
                    style={
                      Object {
                        "borderBottomLeftRadius": "3px",
                        "borderBottomRightRadius": "3px",
                        "borderTopLeftRadius": "3px",
                        "borderTopRightRadius": "3px",
                      }
                    }
                  >
                    <TouchableOpacity
                      activeOpacity={0.3}
                      disabled={true}
                      focusedOpacity={0.7}
                      onPress={[Function]}
                    >
                      <View
                        accessible={true}
                        disabled={true}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "transitionDuration": "0.15s",
                            "transitionProperty": "opacity",
                            "userSelect": "none",
                          }
                        }
                      >
                        <div
                          aria-disabled={true}
                          className="css-view-1dbjc4n"
                          disabled={true}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "MozTransitionProperty": "opacity",
                              "MozUserSelect": "none",
                              "WebkitTransitionDuration": "0.15s",
                              "WebkitTransitionProperty": "opacity",
                              "WebkitUserSelect": "none",
                              "msUserSelect": "none",
                              "transitionDuration": "0.15s",
                              "transitionProperty": "opacity",
                              "userSelect": "none",
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "backgroundColor": "transparent",
                                "borderColor": "#2089dc",
                                "borderRadius": 3,
                                "borderWidth": 0,
                                "flexDirection": "row",
                                "justifyContent": "center",
                                "padding": 8,
                              }
                            }
                          >
                            <div
                              className="css-view-1dbjc4n"
                              style={
                                Object {
                                  "WebkitAlignItems": "center",
                                  "WebkitBoxAlign": "center",
                                  "WebkitBoxDirection": "normal",
                                  "WebkitBoxOrient": "horizontal",
                                  "WebkitBoxPack": "center",
                                  "WebkitFlexDirection": "row",
                                  "WebkitJustifyContent": "center",
                                  "alignItems": "center",
                                  "backgroundColor": "rgba(0,0,0,0.00)",
                                  "borderBottomColor": "rgba(32,137,220,1.00)",
                                  "borderBottomLeftRadius": "3px",
                                  "borderBottomRightRadius": "3px",
                                  "borderBottomWidth": "0px",
                                  "borderLeftColor": "rgba(32,137,220,1.00)",
                                  "borderLeftWidth": "0px",
                                  "borderRightColor": "rgba(32,137,220,1.00)",
                                  "borderRightWidth": "0px",
                                  "borderTopColor": "rgba(32,137,220,1.00)",
                                  "borderTopLeftRadius": "3px",
                                  "borderTopRightRadius": "3px",
                                  "borderTopWidth": "0px",
                                  "flexDirection": "row",
                                  "justifyContent": "center",
                                  "msFlexAlign": "center",
                                  "msFlexDirection": "row",
                                  "msFlexPack": "center",
                                  "paddingBottom": "8px",
                                  "paddingLeft": "8px",
                                  "paddingRight": "8px",
                                  "paddingTop": "8px",
                                }
                              }
                            >
                              <Icon
                                allowFontScaling={false}
                                color="hsl(208, 8%, 90%)"
                                name="long-arrow-right"
                                size={12}
                                style={
                                  Object {
                                    "fontSize": 20,
                                    "marginHorizontal": 10,
                                  }
                                }
                              >
                                <Text>
                                  <div
                                    className="css-text-901oao"
                                    dir="auto"
                                  />
                                </Text>
                              </Icon>
                            </div>
                          </View>
                        </div>
                      </View>
                    </TouchableOpacity>
                  </div>
                </View>
              </Button>
            </ThemedComponent>
          </ForwardRef(Themed.Button)>
        </div>
      </View>
    </RegisterForm>
  </Formik>
</WithFormik(RegisterForm)>
`;
